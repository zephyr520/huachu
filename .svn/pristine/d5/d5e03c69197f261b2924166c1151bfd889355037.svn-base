package com.huachu.core.manager;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.huachu.common.exception.BOException;
import com.huachu.common.web.ApiResultCode;
import com.huachu.core.dao.TRecyclingAccessoryMapper;
import com.huachu.core.dao.TRecyclingDispatchMapper;
import com.huachu.core.dao.TRecyclingListMapper;
import com.huachu.domain.TRecyclingDispatch;

@Component
public class RecyclingListManager {

	@Autowired
	TRecyclingListMapper recyclingListMapper;
	@Autowired
	TRecyclingDispatchMapper recyclingDispatchMapper;
	@Autowired
	TRecyclingAccessoryMapper recyclingAccessoryMapper;
	
	@Transactional(rollbackFor = Exception.class)
	public Boolean dispatchRecyclingList(List<TRecyclingDispatch> dispatchRecyclingList) {
		int count = 0;
		for (TRecyclingDispatch record : dispatchRecyclingList) {
			// 1、更新配件的派单信息
			recyclingAccessoryMapper.updateDispatchRecyclingAccessory(record.getRecyclingUserId(), record.getRecyclingNo());
			// 2、生成派单记录
			count = recyclingDispatchMapper.insertSelective(record);
			if (count < 1) {
				throw new BOException(ApiResultCode.CUSTOMIZE_ERROR, "派单失败，生成派单记录失败");
			}
			// 3、更新回收单的派单记录ID
			count = recyclingListMapper.updateDispatchRecyclingList(record.getId(), record.getRecyclingNo());
			if (count < 1) {
				throw new BOException(ApiResultCode.CUSTOMIZE_ERROR, "派单失败，回收单已全部回收完成");
			}
			
		}
		return Boolean.TRUE;
	}
}
